# name: Playwright Tests

# on:
#   # schedule:
#   #   - cron: "0 1 * * *" # Runs at 8:00 AM UTC every day
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]

# jobs:
#   test:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4

#       - uses: actions/setup-node@v4
#         with:
#           node-version: 23.9.0

#       - name: Cache npm
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Playwright Browsers
#         run: npx playwright install --with-deps

#       - name: Run Playwright tests
#         run: npx playwright test
#         env:
#           URL_BIGTIME_STG: ${{ secrets.URL_BIGTIME_STG }}
#           EMPLOYEE_USERNAME: ${{ secrets.EMPLOYEE_USERNAME }}
#           EMPLOYEE_PASSWORD: ${{ secrets.EMPLOYEE_PASSWORD }}
#           EMPLOYEE2_USERNAME: ${{ secrets.EMPLOYEE2_USERNAME }}
#           EMPLOYEE2_PASSWORD: ${{ secrets.EMPLOYEE2_PASSWORD }}
#           MANAGER_USERNAME: ${{ secrets.MANAGER_USERNAME }}
#           MANAGER_PASSWORD: ${{ secrets.MANAGER_PASSWORD }}
#           MANAGER_TEAM_USERNAME: ${{ secrets.MANAGER_TEAM_USERNAME }}
#           MANAGER_TEAM_PASSWORD: ${{ secrets.MANAGER_TEAM_PASSWORD }}
#           ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
#           ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
#           DB_HOST: ${{ secrets.DB_HOST }}
#           DB_PORT: ${{ secrets.DB_PORT }}
#           DB_NAME: ${{ secrets.DB_NAME }}
#           DB_USER: ${{ secrets.DB_USER }}
#           DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

#       - uses: actions/upload-artifact@v4
#         if: ${{ always() }}
#         with:
#           name: playwright-report
#           path: playwright-report/
#           retention-days: 30

#       - name: Generate Allure Report
#         if: ${{ always() }}
#         run: |
#           npx allure generate allure-results --clean -o allure-report

#       - name: Deploy Allure Report to GitHub Pages
#         if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./allure-report
#           publish_branch: gh-pages

#       - name: Upload test artifacts (screenshots, videos, traces)
#         if: ${{ always() }}
#         uses: actions/upload-artifact@v4
#         with:
#           name: playwright-artifacts
#           path: |
#             test-results/
#             **/screenshots/**
#             **/*.png
#             **/*.webm
#             **/*.zip
#             playwright-report/
            